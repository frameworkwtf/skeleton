image: tico/docker

variables:
  TARGET_PATH: /root/app
  TARGET_BRANCH: master #branch to build and deploy
  SENTRY_WEBHOOK: https://github.com/getsentry/sentry/issues/2367 #Replace it with your webhook, can be found in sentry project -> releases page

.up: &up
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker-compose up -d
    - sleep 30
    - docker-compose exec -T app phinx migrate || true
    - docker-compose exec -T app phinx seed:run || true

.deploy: &deploy
  script:
    - cibu prepare-ssh
    - cibu compose login gitlab-ci-token $CI_JOB_TOKEN $CI_REGISTRY
    - sed -i "s/RELEASE_PLACEHOLDER/${SENTRY_RELEASE}/g" env/$CI_ENVIRONMENT_SLUG.yml
    - ssh $TARGET_HOST mkdir -p $TARGET_PATH
    - scp env/$CI_ENVIRONMENT_SLUG.yml $TARGET_HOST:$TARGET_PATH/docker-compose.yml
    - cibu compose pull
    - cibu compose update app
    - cibu compose up -d --no-deps --no-recreate
    - cibu compose cleanup
    - cibu sentry release $SENTRY_RELEASE $CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID

.tags: &tags
  tags:
    - docker

# tests and build stages merged together to speedup build process
# Gitlab already has reported issue about docker images caching between build stages for 2 years,
# but still no solution for it, so we used that workaround
test and build:
  stage: build
  services:
    - docker:dind
  <<: *up
  script:
    # test
    - composer-install
    - php-cs-fixer fix --dry-run --diff
    - security-checker security:check composer.lock
    - unused-scanner unused.php --silent
    #- docker-compose run phpunit # unit tests
    #- docker-compose run codeception run --html report.html #UI tests
    - if [ "$CI_COMMIT_REF_NAME" != "$TARGET_BRANCH" ]; then exit 0; fi
    # build
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
  cache:
    paths:
      - .php_cs.cache
      - app/vendor
  artifacts: #tests artifacts
    name: tests
    paths:
      - app/tests/coverage/
      - app/tests/_output/
  <<: *tags

deploy:
  stage: deploy
  only:
    - master
  environment:
    name: prod
    url: https://example.com
  variables:
    TARGET_HOST: root@example.com
    SENTRY_RELEASE: $CI_ENVIRONMENT_SLUG-$CI_PIPELINE_ID
  <<: *deploy
  <<: *tags
